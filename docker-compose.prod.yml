version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - NODE_ENV=production
    image: media-radar-frontend:latest
    container_name: media-radar-frontend-prod
    ports:
      - "80:3000"  # Serve on standard HTTP port
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
      - REACT_APP_ENV=production
      - REACT_APP_NAME=${REACT_APP_NAME:-Media Radar}
      - REACT_APP_VERSION=${REACT_APP_VERSION:-1.0.0}
      - REACT_APP_ENABLE_ANALYTICS=${REACT_APP_ENABLE_ANALYTICS:-false}
      - REACT_APP_GA_TRACKING_ID=${REACT_APP_GA_TRACKING_ID}
      - REACT_APP_SENTRY_DSN=${REACT_APP_SENTRY_DSN}
    restart: always
    networks:
      - media-radar-network
    depends_on:
      - backend
    labels:
      - "com.docker.compose.service=frontend"
      - "com.application=media-radar"
      - "com.environment=production"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /var/cache/nginx:rw,noexec,nosuid,size=100m
      - /var/run:rw,noexec,nosuid,size=100m
      - /var/log/nginx:rw,noexec,nosuid,size=100m

  backend:
    image: media-radar-backend:latest
    container_name: media-radar-backend-prod
    ports:
      - "5000:5000"
    networks:
      - media-radar-network
    restart: always

networks:
  media-radar-network:
    driver: bridge 